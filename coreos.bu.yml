variant: fcos
version: 1.4.0
passwd:
  users:
    - name: core
      groups:
        - wheel
        - sudo
        - docker
      password_hash: "$y$j9T$jFCECSzAMayax6L/LNHaE1$0X7OErFgoOHiN6WOPBImBiPlNJB9e6YRU.3fWTYgx/B"
systemd:
  units:
    - name: postinst.service
      enabled: true
      contents: |
        [Unit]
        Description=Initial System Setup
        After=systemd-machine-id-commit.service
        After=network-online.target
        Before=zincati.service
        # Before=graphical.target
        ConditionPathExists=!/var/lib/%N.stamp
        # ConditionFirstBoot=yes

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/sed -r -i 's/^#DNSSEC=.*$/DNSSEC=yes/m' /etc/systemd/resolved.conf
        ExecStart=/usr/bin/sed -r -i 's/^#DNSOverTLS=.*$/DNSOverTLS=yes/m' /etc/systemd/resolved.conf
        ExecStart=/usr/bin/sed -r -i 's/^#Cache=.*$/Cache=yes/m' /etc/systemd/resolved.conf
        ExecStart=/usr/bin/sed -r -i 's/^#DNS=.*$/DNS=1.1.1.2#cloudflare-dns.com 2606:4700:4700::1112#cloudflare-dns.com/m' /etc/systemd/resolved.conf
        ExecStart=/usr/bin/sed -r -i 's/^#FallbackDNS=.*$/FallbackDNS=8.8.4.4#dns.google 2001:4860:4860::8844#dns.google/m' /etc/systemd/resolved.conf
        ExecStart=/usr/bin/systemctl restart systemd-resolved

        ExecStart=/usr/bin/bash -c 'if [ "$(timeout 10 ping -c1 google.com 2>/dev/null)" = "" ]; then sed -r -i 's/^DNSSEC=.*$/DNSSEC=allow-downgrade/m' /etc/systemd/resolved.conf; fi'
        ExecStart=/usr/bin/systemctl restart systemd-resolved
        ExecStart=/usr/bin/bash -c 'if [ "$(timeout 10 ping -c1 google.com 2>/dev/null)" = "" ]; then sed -r -i 's/^DNSSEC=/#DNSSEC=/m' /etc/systemd/resolved.conf; fi'
        ExecStart=/usr/bin/systemctl restart systemd-resolved

        ExecStart=/usr/bin/rpm-ostree install --allow-inactive firewalld qemu-guest-agent tuned
        ExecStart=/usr/bin/rpm-ostree override remove cifs-utils samba-common-libs samba-client-libs libsmbclient libwbclient samba-common sssd-krb5-common sssd-ipa sssd-nfs-idmap sssd-ldap sssd-client sssd-ad sssd-common sssd-krb5 sssd-common-pac
        ExecStart=/usr/bin/sed -i 's/nullok//g' /etc/pam.d/system-auth
        ExecStart=/usr/bin/bash -c 'if curl -s --head --request GET "https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/modprobe.d/30_security-misc.conf" | grep -E "200 OK|HTTP/[0-9]+ 200" > /dev/null; then curl "https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/modprobe.d/30_security-misc.conf" -o "/etc/modprobe.d/30_security-misc.conf"; fi'
        ExecStart=/usr/bin/bash -c 'if curl -s --head --request GET "https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/sysctl.d/30_security-misc.conf" | grep -E "200 OK|HTTP/[0-9]+ 200" > /dev/null; then curl "https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/sysctl.d/30_security-misc.conf" -o "/etc/sysctl.d/30_security-misc.conf"; fi'
        ExecStart=-/usr/bin/sed -i 's/kernel.yama.ptrace_scope=2/kernel.yama.ptrace_scope=1/g' /etc/sysctl.d/30_security-misc.conf
        ExecStart=-/usr/bin/sed -i 's/net.ipv4.icmp_echo_ignore_all=1/net.ipv4.icmp_echo_ignore_all=0/g' /etc/sysctl.d/30_security-misc.conf
        ExecStart=-/usr/bin/sed -i 's/net.ipv6.icmp_echo_ignore_all=1/net.ipv6.icmp_echo_ignore_all=0/g' /etc/sysctl.d/30_security-misc.conf
        ExecStart=/usr/bin/bash -c 'if curl -s --head --request GET "https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/sysctl.d/30_silent-kernel-printk.conf" | grep -E "200 OK|HTTP/[0-9]+ 200" > /dev/null; then curl "https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/sysctl.d/30_silent-kernel-printk.conf" -o "/etc/sysctl.d/30_silent-kernel-printk.conf"; fi'
        ExecStart=/usr/bin/bash -c 'if curl -s --head --request GET "https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/sysctl.d/30_security-misc_kexec-disable.conf" | grep -E "200 OK|HTTP/[0-9]+ 200" > /dev/null; then curl "https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/sysctl.d/30_security-misc_kexec-disable.conf" -o "/etc/sysctl.d/30_security-misc_kexec-disable.conf"; fi'
        ExecStart=/usr/bin/bash -c 'if curl -s --head --request GET "https://raw.githubusercontent.com/GrapheneOS/infrastructure/main/chrony.conf" | grep -E "200 OK|HTTP/[0-9]+ 200" > /dev/null; then curl "https://raw.githubusercontent.com/GrapheneOS/infrastructure/main/chrony.conf" -o "/etc/chrony.conf"; fi'

        ExecStart=/usr/bin/rpm-ostree install --allow-inactive https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-39.noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-39.noarch.rpm
        ExecStart=/usr/bin/rpm-ostree install --allow-inactive tlp tlp-rdw thermald

        # ExecStart=/usr/bin/ostree remote add elxreno-preload https://copr.fedorainfracloud.org/coprs/elxreno/preload/repo/fedora-39/elxreno-preload-fedora-39.repo
        # ExecStart=/usr/bin/bash -c 'if curl -s --head --request GET "https://download.copr.fedorainfracloud.org/results/elxreno/preload/pubkey.gpg" | grep -E "200 OK|HTTP/[0-9]+ 200" > /dev/null; then curl "https://download.copr.fedorainfracloud.org/results/elxreno/preload/pubkey.gpg" -o "/etc/pki/rpm-gpg/RPM-GPG-KEY-elxreno-preload-39-x86_64"; fi'

        ExecStart=/usr/bin/rpm-ostree install --allow-inactive fail2ban clamav clamd clamav-update
        ExecStart=/usr/bin/rpm-ostree install --allow-inactive cronie pwgen rkhunter
        ExecStart=/usr/bin/rpm-ostree install --allow-inactive python python3 python-pip python3-pip
        ExecStart=/usr/bin/rpm-ostree install --allow-inactive gcc-c++ make gcc
        ExecStart=/usr/bin/rpm-ostree install --allow-inactive java-1.8.0-openjdk java-11-openjdk java-latest-openjdk
        ExecStart=/usr/bin/rpm-ostree install --allow-inactive git nodejs npm

        # ExecStart=/usr/bin/rpm-ostree apply-live --allow-replacement

        # ExecStart=/usr/bin/rpm-ostree install --allow-inactive preload

        # ExecStart=/usr/bin/npm config set prefix ~/.npm
        # ExecStart=/usr/bin/npm -g i npm
        # ExecStart=/usr/bin/npm -g i yarn
        ExecStart=/usr/bin/rpm-ostree install --allow-inactive golang pcre-devel

        ExecStart=/usr/bin/git clone https://github.com/AspieSoft/linux-clamav-download-scanner.git /etc/linux-clamav-download-scanner
        ExecStart=/bin/bash /etc/linux-clamav-download-scanner/install.sh --force
        ExecStart=/usr/bin/rm -rf /etc/linux-clamav-download-scanner

        ExecStart=/usr/bin/rpm-ostree install --allow-inactive nano neofetch btrfs-progs lvm2 xfsprogs udftools p7zip p7zip-plugins hplip hplip-gui inotify-tools
        ExecStart=/usr/bin/rpm-ostree install --allow-inactive guvcview

        ExecStart=/usr/bin/rkhunter --update -q
        ExecStart=/usr/bin/rkhunter --propupd -q

        ExecStart=/usr/bin/sed -r -i 's/^#DNSSEC=.*$/DNSSEC=yes/m' /etc/systemd/resolved.conf
        ExecStart=/usr/bin/systemctl restart systemd-resolved

        ExecStart=/bin/touch /var/lib/%N.stamp
        ExecStart=/bin/systemctl --no-block reboot

        [Install]
        WantedBy=multi-user.target
    - name: setsebool.service
      enabled: true
      contents: |
        [Service]
        Type=oneshot
        ExecStart=/usr/sbin/setsebool container_use_cephfs off
        ExecStart=/usr/sbin/setsebool virt_use_nfs off
        ExecStart=/usr/sbin/setsebool virt_use_samba off
        RemainAfterExit=yes
        [Install]
        WantedBy=multi-user.target
    - name: docker.service
      enabled: true
    - name: fstrim.timer
      enabled: true
    - name: systemd-oomd.service
      enabled: true
    - name: rpm-ostree-countme.timer
      enabled: false
      mask: true
    - name: sshd.socket
      enabled: true
    - name: NetworkManager-wait-online.service
      enabled: false
    - name: debug-shell.service
      enabled: false
    - name: nfs-client.target
      enabled: false
    - name: remote-fs.target
      enabled: false
storage:
  files:
    - path: /etc/ssh/sshd_config.d/10-custom.conf
      contents:
        inline: |
          X11Forwarding no
          GSSAPIAuthentication no
    - path: /etc/zincati/config.d/51-rollout-wariness.toml
      contents:
        inline: |
          [identity]
          rollout_wariness = 0
    - path: /etc/zincati/config.d/55-updates-strategy.toml
      contents:
        inline: |
          [updates]
          strategy = "periodic"
          [updates.periodic]
          time_zone = "localtime"
          [[updates.periodic.window]]
          days = [ "Sun" ]
          start_time = "0:00"
          length_minutes = 60
    - path: /etc/tuned/active_profile
      overwrite: true
      contents:
        inline: |
          virtual-guest
    - path: /etc/tuned/profile_mode
      overwrite: true
      contents:
        inline: |
          manual
    - path: /etc/systemd/zram-generator.conf
      overwrite: true
      contents:
        inline: |
          # This config file enables a /dev/zram0 device with the default settings
          [zram0]
          zram-fraction = 1
          max-zram-size = 8192
    - path: /etc/security/limits.d/30-disable-coredump.conf
      overwrite: true
      contents:
        inline: |
          * hard core 0
    - path: /etc/ssh/ssh_config.d/10-custom.conf
      overwrite: true
      contents:
        inline: |
          GSSAPIAuthentication no
          VerifyHostKeyDNS yes
    - path: /etc/docker/daemon.json
      contents:
        inline: |
          {
            "default-runtime": "runc",
            "runtimes": {
              "runsc-ptrace": {
                "path": "/var/usrlocal/bin/runsc",
                "runtimeArgs": [
                  "--platform=ptrace",
                  "--network=host"
                ]
              },
              "runsc-kvm": {
                "path": "/var/usrlocal/bin/runsc",
                "runtimeArgs": [
                  "--platform=kvm",
                  "--network=host"
                ]
              }
            }
          }
  links:
    - path: /etc/localtime
      target: ../usr/share/zoneinfo/America/New_York
    - path: /etc/systemd/system/multi-user.target.wants/tuned.service
      target: /usr/lib/systemd/system/tuned.service
    - path: /etc/systemd/system/kdump.service.target
      target: /dev/null
kernel_arguments:
  should_exist:
    - spectre_v2=on
    - spec_store_bypass_disable=on
    - l1tf=full,force
    - mds=full,nosmt
    - tsx=off
    - txs_async_abort=full,nosmt
    - kvm.nx_huge_pages=force
    - nosmt=force
    - l1d_flush=on
    - mmio_stable_data=full,nosmt
    - random.trust_bootloader=off
    - random.trust_cpu=off
    - intel_iommu=on
    - amd_iommu=on
    - iommu.passthrough=0 iommu.strict=1
    - slab_nomerge
    - init_on_alloc=1
    - init_on_free=1
    - pti=on
    - vsyscall=none
    - page_alloc.shuffle=1
    - randomize_kstack_offset=on
    - extra_latent_entropy
    - defubfs=off
